--- llvm-project-llvmorg-19.1.0-rc3/llvm/CMakeLists.txt
+++ -
@@ -58,7 +58,7 @@ set(LLVM_LIBDIR_SUFFIX "" CACHE STRING "Define suffix of library directory name
 include(GNUInstallDirs)
 
 # This C++ standard is required to build LLVM.
-set(LLVM_REQUIRED_CXX_STANDARD 17)
+set(LLVM_REQUIRED_CXX_STANDARD 20)
 
 # If we find that the cache contains CMAKE_CXX_STANDARD it means that it's a old CMakeCache.txt
 # and we can just inform the user and then reset it.
--- llvm-project-llvmorg-19.1.0-rc3/llvm/include/llvm/ADT/bit.h
+++ -
@@ -24,12 +24,13 @@
 #endif
 
 #if defined(_MSC_VER) && !defined(_DEBUG)
-#include <cstdlib>  // for _byteswap_{ushort,ulong,uint64}
+#include <cstdlib> // for _byteswap_{ushort,ulong,uint64}
 #endif
 
 #if defined(__linux__) || defined(__GNU__) || defined(__HAIKU__) ||            \
     defined(__Fuchsia__) || defined(__EMSCRIPTEN__) || defined(__NetBSD__) ||  \
-    defined(__OpenBSD__) || defined(__DragonFly__)
+    defined(__OpenBSD__) || defined(__DragonFly__) ||                          \
+    defined(__COSMOPOLITAN__)
 #include <endian.h>
 #elif defined(_AIX)
 #include <sys/machine.h>
--- llvm-project-llvmorg-19.1.0-rc3/llvm/lib/Support/Unix/Path.inc
+++ -
@@ -55,6 +55,8 @@ extern char **environ;
 #elif defined(__MVS__)
 #include "llvm/Support/AutoConvert.h"
 #include <sys/ps.h>
+#elif defined(__COSMOPOLITAN__)
+#include <cosmo.h>
 #endif
 
 // Both stdio.h and cstdio are included via different paths and
@@ -112,7 +114,7 @@ typedef uint_t uint;
 #endif
 
 #if defined(__NetBSD__) || defined(__DragonFly__) || defined(__GNU__) ||       \
-    defined(__MVS__)
+    defined(__MVS__) || defined(__COSMOPOLITAN__)
 #define STATVFS_F_FLAG(vfs) (vfs).f_flag
 #else
 #define STATVFS_F_FLAG(vfs) (vfs).f_flags
@@ -126,9 +128,10 @@ namespace fs {
 
 const file_t kInvalidFile = -1;
 
-#if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__) ||      \
-    defined(__FreeBSD_kernel__) || defined(__linux__) || defined(__CYGWIN__) || \
-    defined(__DragonFly__) || defined(_AIX) || defined(__GNU__) ||              \
+#if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__OpenBSD__) ||     \
+    defined(__FreeBSD_kernel__) || defined(__linux__) ||                       \
+    defined(__CYGWIN__) || defined(__DragonFly__) || defined(_AIX) ||          \
+    defined(__GNU__) ||                                                        \
     (defined(__sun__) && defined(__svr4__) || defined(__HAIKU__))
 static int test_dir(char ret[PATH_MAX], const char *dir, const char *bin) {
   struct stat sb;
@@ -233,8 +236,8 @@ std::string getMainExecutable(const char *argv0, void *MainAddr) {
   // Fall back to argv[0] if auxiliary vectors are not available.
   if (getprogpath(exe_path, argv0) != NULL)
     return exe_path;
-#elif defined(_AIX) || defined(__DragonFly__) || defined(__FreeBSD_kernel__) || \
-    defined(__NetBSD__)
+#elif defined(_AIX) || defined(__DragonFly__) ||                               \
+    defined(__FreeBSD_kernel__) || defined(__NetBSD__)
   const char *curproc = "/proc/curproc/file";
   char exe_path[PATH_MAX];
   if (sys::fs::exists(curproc)) {
@@ -334,6 +337,8 @@ std::string getMainExecutable(const char *argv0, void *MainAddr) {
   char link_path[PATH_MAX];
   if (realpath(DLInfo.dli_fname, link_path))
     return link_path;
+#elif defined(__COSMOPOLITAN__)
+  return GetProgramExecutableName();
 #else
 #error GetMainExecutable is not implemented on this host yet.
 #endif
@@ -555,6 +560,8 @@ static bool is_local_impl(struct STATVFS &Vfs) {
   // The file system can have an arbitrary structure on z/OS; must go with the
   // conservative answer.
   return false;
+#elif defined(__COSMOPOLITAN__)
+  return false;
 #else
   return !!(STATVFS_F_FLAG(Vfs) & MNT_LOCAL);
 #endif
--- llvm-project-llvmorg-19.1.0-rc3/llvm/lib/Support/Unix/Threading.inc
+++ -
@@ -374,7 +374,8 @@ static int computeHostNumPhysicalCores() {
   }
   return CPU_COUNT(&Enabled);
 }
-#elif (defined(__linux__) && defined(__s390x__)) || defined(_AIX)
+#elif (defined(__linux__) && defined(__s390x__)) || defined(_AIX) ||           \
+    defined(__COSMOPOLITAN__)
 static int computeHostNumPhysicalCores() {
   return sysconf(_SC_NPROCESSORS_ONLN);
 }
--- llvm-project-llvmorg-19.1.0-rc3/llvm/lib/TextAPI/TextStubCommon.cpp
+++ -
@@ -220,7 +220,7 @@ QuotingType ScalarTraits<SwiftVersion>::mustQuote(StringRef) {
 void ScalarTraits<UUID>::output(const UUID &Value, void *, raw_ostream &OS) {}
 
 StringRef ScalarTraits<UUID>::input(StringRef Scalar, void *, UUID &Value) {
-  Value = {};
+  Value = UUID{};
   return {};
 }
 
--- llvm-project-llvmorg-19.1.0-rc3/llvm/unittests/Analysis/MLModelRunnerTest.cpp
+++ -
@@ -242,7 +242,7 @@ TEST(ReleaseModelRunner, ModelSelector) {
   // expect the model implementation to fail at a point.
 }
 
-#if defined(LLVM_ON_UNIX)
+#if defined(LLVM_ON_UNIX) && !defined(__COSMOPOLITAN__)
 TEST(InteractiveModelRunner, Evaluation) {
   LLVMContext Ctx;
   // Test the interaction with an external advisor by asking for advice twice.
--- llvm-project-llvmorg-19.1.0-rc3/llvm/unittests/Support/DynamicLibrary/CMakeLists.txt
+++ -
@@ -1,3 +1,7 @@
+if (NOT BUILD_SHARED_LIBS)
+  return()
+endif()
+
 # Needed by LLVM's CMake checks because this file defines multiple targets.
 set(LLVM_OPTIONAL_SOURCES ExportedFuncs.cpp PipSqueak.cpp)
 
--- llvm-project-llvmorg-19.1.0-rc3/third-party/unittest/CMakeLists.txt
+++ -
@@ -62,6 +62,8 @@ add_llvm_library(llvm_gtest
   ${BUILDTREE_ONLY}
 )
 
+target_link_options(llvm_gtest PUBLIC -Wl,-allow-multiple-definition)
+
 # The googletest and googlemock sources don't presently use the 'override'
 # keyword, which leads to lots of warnings from -Wsuggest-override. Disable
 # that warning here for any targets that link to gtest.
--- llvm-project-llvmorg-19.1.0-rc3/third-party/unittest/googletest/include/gtest/internal/gtest-port-arch.h
+++ -
@@ -63,7 +63,7 @@
 #endif
 #else
 #define GTEST_OS_WINDOWS_DESKTOP 1
-#endif  // _WIN32_WCE
+#endif // _WIN32_WCE
 #elif defined __OS2__
 #define GTEST_OS_OS2 1
 #elif defined __APPLE__
@@ -117,6 +117,8 @@
 #define GTEST_OS_NXP_QN9090 1
 #elif defined(NRF52)
 #define GTEST_OS_NRF52 1
-#endif  // __CYGWIN__
+#elif defined(__COSMOPOLITAN__)
+#define GTEST_OS_COSMOPOLITAN
+#endif // __CYGWIN__
 
-#endif  // GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_
+#endif // GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_
--- llvm-project-llvmorg-19.1.0-rc3/third-party/unittest/googletest/include/gtest/internal/gtest-port.h
+++ -
@@ -116,6 +116,7 @@
 // NOT define them.
 //
 //   GTEST_OS_AIX      - IBM AIX
+//   GTEST_OS_COSMOPOLITAN - Cosmopolitan Libc
 //   GTEST_OS_CYGWIN   - Cygwin
 //   GTEST_OS_DRAGONFLY - DragonFlyBSD
 //   GTEST_OS_FREEBSD  - FreeBSD
@@ -590,7 +591,7 @@ typedef struct _RTL_CRITICAL_SECTION GTEST_CRITICAL_SECTION;
      defined(GTEST_OS_NETBSD) || defined(GTEST_OS_FUCHSIA) ||         \
      defined(GTEST_OS_DRAGONFLY) || defined(GTEST_OS_GNU_KFREEBSD) || \
      defined(GTEST_OS_OPENBSD) || defined(GTEST_OS_HAIKU) ||          \
-     defined(GTEST_OS_GNU_HURD))
+     defined(GTEST_OS_GNU_HURD) || defined(GTEST_OS_COSMOPOLITAN))
 #define GTEST_HAS_PTHREAD 1
 #else
 #define GTEST_HAS_PTHREAD 0
@@ -660,7 +661,8 @@ typedef struct _RTL_CRITICAL_SECTION GTEST_CRITICAL_SECTION;
      defined(GTEST_OS_QNX) || defined(GTEST_OS_FREEBSD) ||            \
      defined(GTEST_OS_NETBSD) || defined(GTEST_OS_FUCHSIA) ||         \
      defined(GTEST_OS_DRAGONFLY) || defined(GTEST_OS_GNU_KFREEBSD) || \
-     defined(GTEST_OS_HAIKU) || defined(GTEST_OS_GNU_HURD))
+     defined(GTEST_OS_HAIKU) || defined(GTEST_OS_GNU_HURD) ||         \
+     defined(GTEST_OS_COSMOPOLITAN))
 // Death tests require a file system to work properly.
 #if GTEST_HAS_FILE_SYSTEM
 #define GTEST_HAS_DEATH_TEST 1
@@ -689,7 +691,8 @@ typedef struct _RTL_CRITICAL_SECTION GTEST_CRITICAL_SECTION;
 #if defined(GTEST_OS_LINUX) || defined(GTEST_OS_GNU_KFREEBSD) || \
     defined(GTEST_OS_DRAGONFLY) || defined(GTEST_OS_FREEBSD) ||  \
     defined(GTEST_OS_NETBSD) || defined(GTEST_OS_OPENBSD) ||     \
-    defined(GTEST_OS_GNU_HURD) || defined(GTEST_OS_MAC)
+    defined(GTEST_OS_GNU_HURD) || defined(GTEST_OS_MAC) ||       \
+    defined(GTEST_OS_COSMOPOLITAN)
 #define GTEST_CAN_STREAM_RESULTS_ 1
 #else
 #define GTEST_CAN_STREAM_RESULTS_ 0
